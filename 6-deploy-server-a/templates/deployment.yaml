---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{APP_NAME}}-configmap-{{ENV_NAME}}
  namespace: {{ENV_NAME}}
data:
  nginx.conf: |
    server {
      listen 80;
      listen [::]:80;

      location /api/ {
          proxy_pass http://{{BACKEND_APP_NAME}}-{{ENV_NAME}}.{{ENV_NAME}}.svc.cluster.local:80/;
          proxy_buffering off;
          proxy_set_header X-Real-IP $remote_addr;
      }

      location / {
          proxy_pass http://{{SERVER_B_APP_NAME}}-{{ENV_NAME}}.{{ENV_NAME}}.svc.cluster.local:80/;
          proxy_buffering off;
          proxy_set_header X-Real-IP $remote_addr;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{APP_NAME}}
  namespace: {{ENV_NAME}}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{APP_NAME}}
  template:
    metadata:
      labels:
        app: {{APP_NAME}}
    spec:
      containers:
      - name: {{APP_NAME}}
        image: {{GCP_CONTAINER_REGISTRY_HOSTNAME}}/{{PROJECT_ID}}/{{TARGET_BUILD_IMAGE_NAME}}:{{TARGET_BUILD_IMAGE_VERSION}}
        ports:
        - containerPort: 80
        volumeMounts:
        - name: {{APP_NAME}}-volume
          mountPath: /etc/nginx/conf.d
          readOnly: true
        - name: {{APP_NAME}}-log-volume
          mountPath: /var/log/nginx
        resources:  # must specify requests for CPU to autoscale
          requests:
            cpu: "250m"
            memory: "100Mi"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 1
          failureThreshold: 3
      volumes:
      - name: {{APP_NAME}}-volume
        configMap:
          name: {{APP_NAME}}-configmap-{{ENV_NAME}}
          items:
            - key: nginx.conf
              path: nginx.conf
      - name: {{APP_NAME}}-log-volume
        emptyDir: {}

---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: {{APP_NAME}}
  namespace: {{ENV_NAME}}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{APP_NAME}}
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: AverageValue
        averageValue: 100Mi

---
apiVersion: v1
kind: Service
metadata:
  name: {{APP_NAME}}
  namespace: {{ENV_NAME}}
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: {{APP_NAME}}
